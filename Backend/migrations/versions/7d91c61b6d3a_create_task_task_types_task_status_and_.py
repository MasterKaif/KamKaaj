"""Create task task_types, task_Status, and users_tasks table

Revision ID: 7d91c61b6d3a
Revises: 65797575657d
Create Date: 2024-11-09 18:18:11.396145

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d91c61b6d3a'
down_revision = '65797575657d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('entity_name', sa.String(length=20), nullable=False),
    sa.Column('task_type', sa.Integer(), nullable=False),
    sa.Column('contact_person', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('note', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_person'], ['users.id'], ),
    sa.ForeignKeyConstraint(['status'], ['task_statuses.id'], ),
    sa.ForeignKeyConstraint(['task_type'], ['task_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_tasks',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'task_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_tasks')
    op.drop_table('tasks')
    op.drop_table('task_types')
    op.drop_table('task_statuses')
    # ### end Alembic commands ###
